version: "2.0"
services:
  mysql1:
    image: mysql:8.0.30
    container_name: mysql1
    ports: 
      - "13306:3306"
    volumes:
      - ./conf/mysql/mysql1:/etc/mysql/conf.d
    networks:
      - backend
    environment:
      - MYSQL_ROOT_PASSWORD=root
  mysql2:
    image: mysql:8.0.30
    container_name: mysql2
    ports: 
      - "13307:3306"
    volumes:
      - ./conf/mysql/mysql2:/etc/mysql/conf.d
    networks:
      - backend
    depends_on:
      - mysql1
    environment:
      - MYSQL_ROOT_PASSWORD=root
  mysql3:
    image: mysql:8.0.30
    container_name: mysql3
    ports: 
      - "13308:3306"
    volumes:
      - ./conf/mysql/mysql3:/etc/mysql/conf.d
    networks:
      - backend
    depends_on:
      - mysql1
    environment:
      - MYSQL_ROOT_PASSWORD=root
  proxysql:
    image: proxysql/proxysql:latest
    container_name: proxysql
    ports:
      - "16033:6033"
      - "16032:6032"
      - "16080:6080"
    volumes:
      - ./conf/proxysql/proxysql.cnf:/etc/proxysql.cnf
    depends_on:
      - mysql1
      - mysql2
      - mysql3
    networks:
      - frontend
      - backend
  proxysql2:
    image: proxysql/proxysql:latest
    ports:
      - "16043:6033"
      - "16042:6032"
    volumes:
      - ./conf/proxysql/proxysql.cnf:/etc/proxysql.cnf
    depends_on:
      - mysql1
      - mysql2
      - mysql3
    networks:
      - frontend
      - backend
  proxysql3:
    image: proxysql/proxysql:latest
    ports:
      - "16053:6033"
      - "16052:6032"
    volumes:
      - ./conf/proxysql/proxysql.cnf:/etc/proxysql.cnf
    depends_on:
      - mysql1
      - mysql2
      - mysql3
    networks:
      - frontend
      - backend
  orc1:
    platform: linux/amd64
    build: ./conf/orchestrator/
    working_dir: /usr/local/orchestrator
    container_name: orc1
    ports:
      - "23101:3000"
    volumes:
      - ./conf/orchestrator/orc1/orchestrator.conf.json:/etc/orchestrator.conf.json
      - ./conf/orchestrator/remove-proxysql-host.bash:/root/remove-proxysql-host.bash
    depends_on:
      - mysql1
      - mysql2
      - mysql3
      - proxysql1
    networks:
      - backend
  orc2:
    platform: linux/amd64
    build: ./conf/orchestrator/
    working_dir: /usr/local/orchestrator
    container_name: orc2
    ports:
      - "23102:3000"
    volumes:
      - ./conf/orchestrator/orc2/orchestrator.conf.json:/etc/orchestrator.conf.json
      - ./conf/orchestrator/remove-proxysql-host.bash:/root/remove-proxysql-host.bash
    depends_on:
      - mysql1
      - mysql2
      - mysql3
      - proxysql1
    networks:
      - backend
  orc3:
    platform: linux/amd64
    build: ./conf/orchestrator/
    working_dir: /usr/local/orchestrator
    container_name: orc3
    ports:
      - "23103:3000"
    volumes:
      - ./conf/orchestrator/orc3/orchestrator.conf.json:/etc/orchestrator.conf.json
      - ./conf/orchestrator/remove-proxysql-host.bash:/root/remove-proxysql-host.bash
    depends_on:
      - mysql1
      - mysql2
      - mysql3
      - proxysql1
    networks:
      - backend
    environment:
      - ORCHESTRATOR_API="http://orc1:3000/api http://orc2:3000/api http://orc3:3000/api"
  pmm:
    image: percona/pmm-server:2
    container_name: pmm-server
    restart: always
    ports:
      - "8081:80"
      - "4431:443"
    networks:
      - frontend
      - backend
    volumes:
      - pmm-data:/srv
    depends_on:
      - proxysql
    environment:
      - GF_AUTH_ANONYMOUS=true
  pmm-client:
    platform: linux/amd64
    build: ./conf/pmm-client/
    container_name: pmm-client
    networks:
      - backend
    volumes:
      - ./conf/pmm-client/entrypoint.bash:/entrypoint.bash
    depends_on:
      - pmm
    environment:
      - PMM_SERVER=https://pmm-server:443/
      - PMM_AGENT_SERVER_USERNAME=admin
      - PMM_AGENT_SERVER_PASSWORD=admin
      - PMM_AGENT_SERVER_INSECURE_TLS=1
networks:
  frontend:
  backend:
volumes:
  pmm-data:
    name: pmm-data
    external: false
